---


services: docker

env:
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: centos6
    init: /sbin/init
    run_opts: ""
  - distro: ubuntu1604
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

before_install:
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

install:
  # Install Ansible.
  #- pip install ansible

  # Add ansible.cfg to pick up roles path.
  #- "{ echo '[defaults]'; echo 'roles_path = ../'; } >> ansible.cfg"

script:

  - container_id=$(mktemp)

  # Run container in detached state.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Test role.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

  
  # Test role idempotence.
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml -vv | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)


  # Ensure Supervisor is installed.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm which supervisorctl'

  # Check the role/playbook's syntax.
  #- "ansible-playbook -i tests/inventory tests/$SITE --syntax-check"

  # Run the role/playbook with ansible-playbook.
  #- "ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo -vvv"

  # Travis CI's environment requires one _extra_ run for true idempotence :-/.
  #- "ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo"

  # Run the role/playbook again, checking to make sure it's idempotent.
  # - >
  #   ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo
  #   | grep 'changed=0.*failed=0'
  #   && (echo 'Idempotence test: pass' && exit 0)
  #   || (echo 'Idempotence test: fail' && exit 1)

  # Make sure supervisord is running, print some things
  #- "cat /var/log/supervisord.log"
  #- >
  #  ps aux |  grep -v "grep" | grep supervisor 

  # Make sure supervisord is running and with conf settings
  #- >
  #  ps aux |  grep -v "grep" |  grep supervisord 
  #  | grep 'supervisord.conf'
  #  && (echo 'Idempotence test: pass' && exit 0)
  #  || (echo 'Idempotence test: fail' && exit 1)
  #- >
  #  ls -1 /etc/supervisor
  #  | grep -q 'supervisord.conf'
  #  && (echo 'Idempotence test: pass' && exit 0)
  #  || (echo 'Idempotence test: fail' && exit 1)


notifications:
    webhooks: https://galaxy.ansible.com/api/v1/notifications/
    
    
